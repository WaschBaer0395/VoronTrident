[manual_stepper brush_arm]
step_pin: PE1
dir_pin: !PE0
enable_pin: !PC5        
rotation_distance: 108.57
microsteps: 16                  # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
endstop_pin: ^PB14
velocity: 200
accel: 5000

[tmc2209 manual_stepper brush_arm]
uart_pin: PD11
run_current: 0.55
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 5000
# Uncomment the lines below if you want to use sensorless homing for the selector
#diag_pin: ^ercf:PA7            # Set to MCU pin connected to TMC DIAG pin - move the jumper to position 2-3
#driver_SGTHRS: 75              # 255 is most sensitive value, 0 is least sensitive


########################################
# Brush Macros
########################################

# Brush System Configuration Variables
[gcode_macro _BRUSH_VARIABLES]
description: Configuration variables for the brush system
variable_brush_x_pos: 31.0          # X position of brush left side
variable_brush_y_pos: 296.0         # Y position of brush
variable_min_z_height: 20.0         # Minimum Z height before brush operations
variable_brush_width: 40.0          # Width of brush area for cleaning
variable_brush_passes: 5            # Number of brush passes
variable_brush_speed_start: 3000    # Starting brush speed (mm/min)
variable_brush_speed_increment: 1000 # Speed increase per pass
variable_y_offset_increment: 0.5    # Y offset between passes to vary brush area (max Â±1mm)
variable_purge_x_offset: -13.0      # Distance to left of brush for purging
variable_purge_temp: 220            # Default purge temperature
variable_purge_amount: 100.0         # Default purge amount (mm)
variable_purge_speed: 900           # Purge extrusion speed
variable_retract_speed: 1200         # Retract speed
variable_purge_retract: 3.0         # Filament retract distance after purge (mm)
variable_park_x_pos: 290.0           # Park position X coordinate
variable_park_y_pos: 304.0           # Park position Y coordinate
variable_park_speed: 12000
variable_auto_retract_arm: 1        # Auto-retract arm after parking (1=yes, 0=no)
variable_brush_homed: 0             # Brush arm homing status
gcode:

########################################
# Brush Arm Homing Macro
########################################
[gcode_macro HOME_BRUSH_ARM]
description: Home the brush arm mechanism
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    {action_respond_info("Homing brush arm...")}
    
    # Reset position and perform initial homing move
    MANUAL_STEPPER STEPPER=brush_arm SET_POSITION=0
    MANUAL_STEPPER STEPPER=brush_arm MOVE=50 SPEED=50 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=brush_arm SET_POSITION=37
    
    # Move to working position
    MANUAL_STEPPER STEPPER=brush_arm MOVE=33 SPEED=50
    
    # Fine homing
    MANUAL_STEPPER STEPPER=brush_arm MOVE=50 SPEED=10 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=brush_arm SET_POSITION=38
    
    # Update homing status
    SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=brush_homed VALUE=1
    {action_respond_info("Brush arm homed successfully")}

########################################
# Brush Deploy/Retract Macros
########################################
[gcode_macro BRUSH_DEPLOY]
description: Deploy the brush arm
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    {action_respond_info("Preparing to deploy brush arm...")}
    
    # CRITICAL: Perform safety checks BEFORE deploying
    _BRUSH_SAFETY_CHECK
    
    # Check if brush is homed
    {% if vars.brush_homed == 0 %}
        {action_respond_info("Brush arm not homed, homing first...")}
        HOME_BRUSH_ARM
    {% endif %}
    
    {action_respond_info("Deploying brush arm...")}
    MANUAL_STEPPER STEPPER=brush_arm MOVE=0 SPEED=400

[gcode_macro BRUSH_RETRACT]
description: Retract the brush arm
gcode:
    {action_respond_info("Retracting brush arm...")}
    MANUAL_STEPPER STEPPER=brush_arm MOVE=37 SPEED=400

########################################
# Safety Check Macro
########################################
[gcode_macro _BRUSH_SAFETY_CHECK]
description: Perform safety checks before brush operations
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    # Check if printer axes are homed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        {action_respond_info("Printer not homed, homing all axes...")}
        G28
    {% endif %}
    
    # Check minimum Z height
    {% if printer.toolhead.position.z < vars.min_z_height %}
        {action_respond_info("Z too low, raising to safe height...")}
        G90
        G1 Z{vars.min_z_height} F1800
    {% endif %}
    
    # Check if brush is homed
    {% if vars.brush_homed == 0 %}
        {action_respond_info("Brush arm not homed, homing first...")}
        HOME_BRUSH_ARM
    {% endif %}

########################################
# Nozzle Brushing Macro
########################################
[gcode_macro BRUSH_NOZZLE]
description: Clean the nozzle with the brush
# Optional parameters: X_POS, Y_POS (override default positions)
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    # Get parameters or use defaults
    {% set brush_x = params.X_POS|default(vars.brush_x_pos)|float %}
    {% set brush_y = params.Y_POS|default(vars.brush_y_pos)|float %}
    
    {action_respond_info("Starting nozzle brushing sequence...")}
    
    # Perform safety checks
    _BRUSH_SAFETY_CHECK
    
    # Deploy brush
    BRUSH_DEPLOY
    
    # Move to brush position
    G90
    G1 X{brush_x} Y{brush_y} F6000
    
    # Perform brushing passes
    {% for pass in range(vars.brush_passes) %}
        {% set current_speed = vars.brush_speed_start + (pass * vars.brush_speed_increment) %}
        {% set y_offset = (pass - 1) * vars.y_offset_increment %}  # Center around 0, so -0.5, 0, +0.5
        
        {action_respond_info("Brush pass %d/%d at speed %d" % (pass + 1, vars.brush_passes, current_speed))}
        
        # Move to starting position with Y offset
        G1 Y{brush_y + y_offset} F3000
        
        # Brush left to right
        G1 X{brush_x + vars.brush_width} F{current_speed}
        
        # Brush right to left
        G1 X{brush_x} F{current_speed}
    {% endfor %}
    
    # DO NOT park here - brushing stays at brush position
    
    {action_respond_info("Nozzle brushing complete")}

########################################
# Purge Macro
########################################
[gcode_macro PURGE_NOZZLE]
description: Purge filament at the brush area
# Parameters: TEMP (temperature), AMOUNT (purge amount in mm)
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    # Get parameters or use defaults
    {% set purge_temp = params.TEMP|default(vars.purge_temp)|int %}
    {% set purge_amount = params.AMOUNT|default(vars.purge_amount)|float %}
    {% set first_purge_amount = purge_amount/2 %}
    {% set second_purge_amount = purge_amount/2 %}
    {% set brush_x = params.X_POS|default(vars.brush_x_pos)|float %}
    {% set brush_y = params.Y_POS|default(vars.brush_y_pos)|float %}
    
    {action_respond_info("Starting purge sequence (Temp: %dC, Amount: %.1fmm)" % (purge_temp, purge_amount))}
    
    # Perform safety checks
    _BRUSH_SAFETY_CHECK
    
    # Deploy brush for collection
    BRUSH_DEPLOY
    
    # Move to purge position (left of brush)
    {% set purge_x = brush_x + vars.purge_x_offset %}
    G90
    G1 X{purge_x} Y{brush_y} F6000
    
    # Set hotend temperature and wait
    {action_respond_info("Heating hotend to %dC..." % purge_temp)}
    M109 S{purge_temp}
    
    # Reset extruder position
    G92 E0
    
    # Perform purge 1
    {action_respond_info("First Purge: Purging %.1fmm of filament..." % first_purge_amount)}
    G91  # Relative positioning
    G1 E{first_purge_amount} F{vars.purge_speed}

    
    # Turn on fan after half the filament is purged
    M106 P0 S255

    G4 P1000
    
    # Perform purge 1
    {action_respond_info("Second Purge: Purging %.1fmm of filament..." % second_purge_amount)}
    G91  # Relative positioning
    G1 E{second_purge_amount/2} F{vars.purge_speed}

    
    # Retract filament after purge
    {action_respond_info("Retracting %.1fmm after purge..." % vars.purge_retract)}
    G1 E-{vars.purge_retract} F{vars.retract_speed}
    G90  # Absolute positioning

    # Turn off fan 
    M106 P0 S0
    
    # Reset extruder
    G92 E0
    
    {action_respond_info("Purge sequence complete")}

########################################
# Combined Purge and Brush Macro
########################################
[gcode_macro PURGE_AND_BRUSH]
description: Complete purge and brush sequence
# Parameters: TEMP, PURGE_AMOUNT, X_POS, Y_POS
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    
    # Get parameters
    {% set purge_temp = params.TEMP|default(vars.purge_temp)|int %}
    {% set purge_amount = params.PURGE_AMOUNT|default(vars.purge_amount)|float %}
    {% set brush_x = params.X_POS|default(vars.brush_x_pos)|float %}
    {% set brush_y = params.Y_POS|default(vars.brush_y_pos)|float %}
    
    {action_respond_info("Starting combined purge and brush sequence...")}
    
    # Purge first
    PURGE_NOZZLE TEMP={purge_temp} AMOUNT={purge_amount} X_POS={brush_x} Y_POS={brush_y}
    
    # Then brush
    BRUSH_NOZZLE X_POS={brush_x} Y_POS={brush_y}
    
    # Move to park position after brushing
    {action_respond_info("Moving to park position (X:%.1f Y:%.1f)..." % (vars.park_x_pos, vars.park_y_pos))}
    G1 X{vars.park_x_pos} Y{vars.park_y_pos} F{vars.park_speed}  # Move to park position at current Z
    
    # Auto-retract arm if enabled
    {% if vars.auto_retract_arm == 1 %}
        {action_respond_info("Auto-retracting brush arm...")}
        BRUSH_RETRACT
    {% endif %}
    
    {action_respond_info("Purge and brush sequence complete")}

########################################
# Configuration Helper Macros
########################################
[gcode_macro SET_BRUSH_POSITION]
description: Set brush X and Y position
# Parameters: X, Y
gcode:
    {% if params.X %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=brush_x_pos VALUE={params.X}
        {action_respond_info("Brush X position set to: %s" % params.X)}
    {% endif %}
    {% if params.Y %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=brush_y_pos VALUE={params.Y}
        {action_respond_info("Brush Y position set to: %s" % params.Y)}
    {% endif %}

[gcode_macro SET_MIN_Z_HEIGHT]
description: Set minimum Z height for brush operations
# Parameters: Z
gcode:
    {% if params.Z %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=min_z_height VALUE={params.Z}
        {action_respond_info("Minimum Z height set to: %s" % params.Z)}
    {% endif %}

[gcode_macro SET_PARK_POSITION]
description: Set park position after purge/brush operations
# Parameters: X, Y
gcode:
    {% if params.X %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=park_x_pos VALUE={params.X}
        {action_respond_info("Park X position set to: %s" % params.X)}
    {% endif %}
    {% if params.Y %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=park_y_pos VALUE={params.Y}
        {action_respond_info("Park Y position set to: %s" % params.Y)}
    {% endif %}

[gcode_macro SET_PURGE_RETRACT]
description: Set filament retract distance after purge
# Parameters: DISTANCE
gcode:
    {% if params.DISTANCE %}
        SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=purge_retract VALUE={params.DISTANCE}
        {action_respond_info("Purge retract distance set to: %s mm" % params.DISTANCE)}
    {% endif %}

[gcode_macro TOGGLE_AUTO_RETRACT]
description: Toggle automatic arm retraction after operations
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    {% set new_value = 0 if vars.auto_retract_arm == 1 else 1 %}
    SET_GCODE_VARIABLE MACRO=_BRUSH_VARIABLES VARIABLE=auto_retract_arm VALUE={new_value}
    {action_respond_info("Auto-retract arm: %s" % ("ENABLED" if new_value == 1 else "DISABLED"))}

[gcode_macro SHOW_BRUSH_CONFIG]
description: Display current brush configuration
gcode:
    {% set vars = printer["gcode_macro _BRUSH_VARIABLES"] %}
    {action_respond_info("=== Brush System Configuration ===")}
    {action_respond_info("Brush Position: X=%.1f Y=%.1f" % (vars.brush_x_pos, vars.brush_y_pos))}
    {action_respond_info("Min Z Height: %.1f" % vars.min_z_height)}
    {action_respond_info("Brush Width: %.1f" % vars.brush_width)}
    {action_respond_info("Brush Passes: %d" % vars.brush_passes)}
    {action_respond_info("Purge Temperature: %dÂ°C" % vars.purge_temp)}
    {action_respond_info("Purge Amount: %.1fmm" % vars.purge_amount)}
    {action_respond_info("Purge Retract: %.1fmm" % vars.purge_retract)}
    {action_respond_info("Park Position: X=%.1f Y=%.1f" % (vars.park_x_pos, vars.park_y_pos))}
    {action_respond_info("Auto-retract arm: %s" % ("Yes" if vars.auto_retract_arm else "No"))}
    {action_respond_info("Brush Homed: %s" % ("Yes" if vars.brush_homed else "No"))}