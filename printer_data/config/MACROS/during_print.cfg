[include macros_vars.cfg]

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    G92 E0
    SAVE_GCODE_STATE NAME=COLORCHANGE
    MMU_CUT_TIP
    RESTORE_GCODE_STATE NAME=COLORCHANGE
    PAUSE
    
     
######################################################################
# CANCEL PRINT
######################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  #{% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
  _TOOLHEAD_PARK_PAUSE_CANCEL
  #{% endif %}
  TURN_OFF_HEATERS
  SET_GCODE_OFFSET Z=0.0
  CANCEL_PRINT_BASE

######################################################################
# PAUSE PRINT
######################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        M118 {"Pausing Print"}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X295 Y305 F15000                                                                  ; park toolhead
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S170                                                                            ; put hotend into sleep
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}
  
######################################################################
# RESUME PRINT
######################################################################  

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: BASE_RESUME
gcode:
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(25)|int %}                                           ; hotend prime amount (in mm)
    {% if printer['pause_resume'].is_paused|int == 1 %}                                                              ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 E{e} F900                                                             ; prime nozzle by E
        {% else %}
            G1 E0 F900                                                               ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                                                                  ; retract 1mm
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=250                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=250                         ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}
  

